name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - master

jobs:
  run_unit_tests:
    name: Python Tests
    continue-on-error: true
    runs-on: aws_python_runner
    strategy:
      matrix:
        os: [ self.hosted ]
        python-version: [ 3.8 ]
        tests_module: [
            "lms/djangoapps/[b].*", "lms/djangoapps/[d-e].*",
            "lms/djangoapps/[c](?!ourseware).*", "lms/djangoapps/[c]ourseware.*",
            "lms/djangoapps/[g-m].*", "lms/djangoapps/[n-z].*",
            "cms/djangoapps/[a-z].*", "common/djangoapps/[a-z].*",
            "openedx/core/djangoapps/[a-c].*", "openedx/core/djangoapps/[d-z].*",
            "lib",
        ]
    steps:
      - uses: actions/checkout@v1
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/edx/development.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install Required Python Dependencies
        env:
          PIP_SRC_DIR: ${{ runner.temp }}
        run: |
          pip install -r requirements/pip.txt
          pip install -r requirements/edx/development.txt --src $PIP_SRC_DIR

      - name: Run Unit Tests
        if: contains(matrix.tests_module, 'djangoapps')
        env:
          TEST_MODULE: ${{ matrix.tests_module }}
          TEST_SUITE: python
          PIP_SRC_DIR: ${{ runner.temp }}
        run: |
          paver test_system -d $TEST_MODULE --disable_capture

      - name: Run Lib Tests
        if: contains(matrix.tests_module, 'djangoapps') != true
        env:
          TEST_MODULE: ${{ matrix.tests_module }}
          TEST_SUITE: python
          PIP_SRC_DIR: ${{ runner.temp }}
        run: |
          paver test_lib --disable_capture

      - name: Save Job Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Build-Artifacts
          path: |
            **/reports/**/*
            test_root/log/**/*.log
            *.log
